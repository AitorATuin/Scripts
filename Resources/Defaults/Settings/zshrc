#!/bin/zsh


### Global ZShell settings.

# This line has to come first for dircolors.
export SHELL=/bin/zsh

# Disable flow control. (Ctrl-S, Ctrl-Q is annoying)
stty -ixon

# Shell options:
setopt autopushd autocd nobeep nohashcmds histignoredups completealiases
autoload run-help
unalias run-help 2> /dev/null

eval `dircolors`

alias ll='ls -la'
alias ls='ls --color=tty'
alias lsd='find -type d -maxdepth 1'
alias lsh='ls -A .* -d'
alias mkdir='mkdir -p'
alias off='sudo -u "#0" ${goboPrefix}/System/Links/Executables/shutdown -h -t 0 now "GoboLinux is powering off now."'
alias halt='off'
alias poweroff='off'
alias pd='pushd'
alias p='popd'
# An alias for the lousy typist :)
alias sl='ls'

export HISTCONTROL=ignoredups
export HISTIGNORE="ls:exit"
export HISTFILE="${HOME}/.Settings/zsh_history"
export HISTSIZE=100
export SAVEHIST=200

export MANPATH="${goboPrefix}/System/Links/Manuals:${MANPATH}"
export INFOPATH="${goboPrefix}/System/Links/Manuals/info:${INFOPATH}"
export LD_LIBRARY_PATH="${goboPrefix}/System/Links/Libraries:${LD_LIBRARY_PATH}"
export C_INCLUDE_PATH="${goboPrefix}/System/Links/Headers${C_INCLUDE_PATH:+:$C_INCLUDE_PATH}"
export CPLUS_INCLUDE_PATH="${goboPrefix}/System/Links/Headers${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH}"
export TMPDIR="${goboPrefix}/System/Variable/tmp"

export PATH="${goboPrefix}/System/Links/Executables:${PATH}:."
path=("${goboPrefix}/System/Links/Executables" $path ".")
fpath=("${goboPrefix}/System/Settings/zsh/functions" "${HOME}/.Settings/zsh/functions" $fpath)

autoload -U promptinit
promptinit
colors

# The following lines were added by compinstall

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' list-colors 'no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jpg=01;35:*.png=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.png=01;35:*.mpg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:'
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
# Partly insensitive matcher:
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' ''
# Completely insensitive matcher:
#zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' ''
zstyle ':completion:*' menu select=1
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
#zstyle :compinstall filename '/System/Settings/zshrc'

autoload -U compinit
compinit -i
# End of lines added by compinstall


# This must be done before loading a zkbd
zmodload zsh/complist &> /dev/null

if [[ -e ${goboPrefix}/System/Settings/zsh/zkbd-$TERM-$VENDOR-$OSTYPE ]]
then
   . ${goboPrefix}/System/Settings/zsh/zkbd-$TERM-$VENDOR-$OSTYPE

   bindkey "${key[Home]}" beginning-of-line
   bindkey "${key[End]}" end-of-line
   bindkey "${key[Delete]}" delete-char-or-list
   bindkey -M menuselect "${key[Delete]}" undo

   bindkey "${key[PageUp]}" undo
   bindkey "${key[PageDown]}" redo

   # How about this: context-sensitive help on the shell :)
   bindkey "${key[F1]}" run-help
fi

# Try pressing "/" when TAB-completing your way through a long pathname.
bindkey -M menuselect "/" accept-and-infer-next-history

# Alt+Space: complete word based on history.
bindkey "^[ " _history-complete-older

# For the Windows users out there -- I like PageUp and PageDown better.
bindkey '^Z' undo

# Bash-like behavior that is nice.
autoload bash-backward-kill-word
autoload bash-kill-word
zle -N backward-kill-word bash-backward-kill-word
zle -N kill-word bash-kill-word

# Zsh is nice and provides a "which", but "no, thanks, we have our own".
disable which

[ "$DISPLAY" != "" ] && export TERM='xterm-color'

# Source application environment settings.
local envcachefile="${goboPrefix}/System/Links/Environment/Cache"
[[ -e "$envcachefile" ]] || { cat "${goboPrefix}/System/Links/Environment"/* > "$envcachefile" } 2> /dev/null
{ source "$envcachefile" } 2> /dev/null
unset envcachefile

