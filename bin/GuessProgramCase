#!/bin/bash

# (C) 2004-2006 Andre Detsch. Released under the GNU GPL.

# GuessProgramCase
# Try to guess the case of a program based on the installed packages

### Changelog ########################################################

# 25/01/2005 - [detsch] Ported to bash
# 27/04/2004 - [detsch] Bugfix when calling from command line
# 13/04/2004 - [detsch] Using ${goboPrograms}
# 10/04/2004 - [detsch] First version


if [ $# -lt 1 -o "$1" = "--help" -o  "$1" = "-h" ]
then
	echo "Usage: `basename $0` program_name [version]"
	exit 1
fi

program="$1"
version="$2"

. GoboPath

if [ -e "$goboPrograms/$program/$version" ]
then
	# Case 1: we have a perfect match (version can be "")
	echo $program
else 
	pushd $goboPrograms &> /dev/null
	ds=`find . -maxdepth 1 -iname "$program" | cut -b3-`
	popd &> /dev/null
	
	if [ `echo $ds | wc -w` = "1" ]
	then
		# Case 2: there is only one matching program installed
		echo $ds
	elif [ `echo $ds | wc -w` = "0" ]
	then
		# Case 3: there is no matching program installed (should GetAvailable be called?)
		echo $program
	elif [ ! "$version" ]
	then
		tokens=($ds) # WTF?
		# Case 4: there is more than one matching program, and we DON'T care about version
		echo ${tokens[0]}
	else 	
		found=
		for d in $ds
		do
			if [ -e "$goboPrograms/$d/$version" ] 
			then
				# Case 5: We found a matching program + desired version
				echo $d
				found=1
				break
			fi
		done
		if [ ! "$found" ]
		then
			tokens=($ds) 
			# Case 5: We did not found a matching version, so we return any matching 
			#         program (should GuessLatest be called?)
			echo ${tokens[0]}
		fi
	fi
fi
