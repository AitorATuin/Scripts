#!/usr/bin/env zsh

# print banner
cat >&2 <<EOF
PrioritiseUpdates 1.0 - order SuggestUpdates output
 (Copyright 2005 MJ Ray. Released under GNU GPL v2.)

EOF

if [ -z "$1" -o "$1" = "--help" -o "$1" = "--version" ] ; then
  echo "Usage: $0 <Install-or-Compile-Scriptfile>"
  exit 127
fi

sekvudepoj() {
  depdos=/Programs/$1/Current/Resources/Dependencies
  for dep in $([ -e $depdos ] && grep -v '^ *#' $depdos | cut -f1 '-d ') ; do
    echo $dep D 
  done
}

ordigu() {
typeset -A vidita
# Iterate over requested programs, following dependencies
cut -f2 '-d ' $1 | while read prog ; do
  sekvudepoj $prog
  echo $prog R
done | tr A-Z a-z | while read prog type ; do
  if [ -z "${vidita[$prog]}" ] ; then
    if [ "$type" = "d" ] ; then
      vidita[$prog]="NEEDS"
    else
      vidita[$prog]="done"
    fi
    grep -iw $prog $1 || vidita[$prog]="ignored"
  fi
  case "$type" in
    "r") echo do $prog >&2 ;;
    "d") if [ -n "${vidita[$prog]}" ] ; then
           echo -n "${vidita[$prog]} " >&2
         fi
         echo -n "$prog, " >&2 ;;
  esac
done
echo >&2
}

i=0
while ! cmp -s $1.orig $1 ; do
  mv $1 $1.orig
  i=$(($i + 1))
  echo "Pass $i:"
  ordigu $1.orig >$1
done

# output trailing banner
echo "--- Finish: $i pass(es)" >&2

exit 0
