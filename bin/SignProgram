#!/bin/bash

source ScriptFunctions
Import OptionParser
Import GoboLinux
Import File
Import String

######## Exit Codes #######
# 0    Normal/no error
# 1    Unable to generate FileHash
# 2    No GnuPG or private key
# 3    Unable to sign FileHash

scriptDescription="Generate and sign a hash file of a Gobolinux package with gpg."
scriptCredits="Copyright (C) 2003 Carlo Calica. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="{ <package> [<version>] | <package_file> }"
scriptNotes="If no version is specified, Current is assumed.  "\
"If the -u option isn't used, the first ID found in the secret keyring is used."

########## Options ##########
Add_Option_Entry "u" "local-user" "Use <entry> as the user ID to sign with."
Add_Option_Boolean "S" "no-signature" "Just create FileHash.  No GPG signing."

Parse_Options "$@"

GPG_opts="--keyring ${GPG_gobo_keyring}"

if Is_Entry_Set "local-user"
then
   localuser=`Entry "local-user"`
   GPG_opts="${GPG_opts} -u $localuser"
fi

########## Version ##########
if [ -f "$(Arg 1)" ]
then
   filepath=`readlink -f $(Arg 1)`
   bn=`basename $filepath`
   package=`Get_Token "$bn" "--" "0"`
   version=`Get_Token "$bn" "--" "1"`
   prefix=$goboTemp
   [ -d $prefix/$package/$version ] && rm -rf $prefix/$package/$version
   Log_Normal "Unpacking $filepath at $prefix..."
   tar -C$prefix -xvjf $filepath
   sudo_exec=""
   sudo_validate=""
   [ -d $prefix/$package/$version ] || Die "Error unpacking $filepath ($package $version)"
else
   package=`GuessProgramCase $(Arg 1) $(Arg 2)`
   if [ "$(Arg 2)" ]
   then
      version=`Get_Version "$package" "$(Arg 2)"`
   else
      version=`Get_Version "$package" "Current"`
   fi
   prefix="$goboPrograms"
   Is_Directory "$prefix/$package" || Die "Package $package does not exist."
   Is_Empty "$version" && Die "Couldn't find a proper version for $package."
   Is_Directory "$prefix/$package/$version" || Die "$package version $version is not a valid package."
fi

Release_Superuser

########## Functions ##########

########## Sign Resources/FileHash ##########

FileHash_loc="$prefix/$package/$version/Resources/FileHash"
FileHash_sig="${FileHash_loc}.sig"

# Clear existing sigs and hashes
$sudo_exec rm -f "$FileHash_loc"
$sudo_exec rm -f "$FileHash_sig"

Log_Normal "Creating FileHash"
Gen_FileHash "$prefix/$package/$version" "$FileHash_loc"
Succeeded || exit 1
Boolean "no-signature" && exit 0

# Check for gpg and keyring
Can_Sign || exit 2

Log_Normal "Signing FileHash"
Sign_File "$FileHash_loc" "$FileHash_sig"
if Failed
then
   Log_Error "Unable to sign"
   exit 3
fi

if [ "$filepath" ]
then
   Log_Normal "Re-packing signed $filepath..."
   mv $filepath $filepath.bk
   tar -cjf $filepath -C$prefix $package/$version || Die "Error re-packing $filepath ($package $version)"
   rm -f $filepath.bk
   rm -rf $prefix/$package
fi

exit 0

