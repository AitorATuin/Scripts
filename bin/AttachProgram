#!/bin/sh

source ScriptFunctions
Import File
Import GoboLinux
Import Log
Import OptionParser

### Changelog #################################################################

# 20/09/2004 - [calica] First Version

### Options ###################################################################

scriptDescription="Create a link in ${goboPrograms} to \$goboInstall or <src_tree>."
scriptCredits="Copyright (C) 2004 Carlo Calica. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="<program> [<version>] [<src_tree>]"
scriptExample="GCC 2.95.3 /Network/Programs"
scriptNotes="This script creates a program entry in ${goboPrograms} with a version "\
"symlink to <src_tree> directory.  After it is tied into ${goboPrograms}, "\
"SymlinkProgram is executed.  "\
"If <destdir> is omitted the env var goboInstall is used."
Add_Option_Boolean "b" "batch" "Batch mode."
Add_Option_Boolean "f" "force" "Force, reattach even if installed."
Add_Option_Boolean "r" "rootfs" "Move to RootFS."
Add_Option_Boolean "D" "no-dependencies" "Do not try to fullfit dependencies."
Parse_Options "$@"
shift $parsedArguments

### Operation #################################################################

Is_Writable "${goboPrograms}" || Verify_Superuser

if Is_Directory "$3"
then
   goboInstall="$3"
elif Is_Directory "$2"
then
   goboInstall="$2"
   no_version="true"
fi
export goboInstall=`readlink -f $goboInstall`

if [ "$goboPrograms" = "$goboInstall" ]
then
   Die "Please specify a directory as an argument or goboInstall env variable."
fi


programname=`(export goboPrograms=$goboInstall; GuessProgramCase $1 $2)`
if [ "$no_version" != "true" ] && [ "$2" ] 
then
   if Is_Directory "${goboInstall}/${programname}/$2"
   then
      versionnumber="$2"
   fi
else
   versionnumber=`(cd ${goboInstall}/${programname}; GuessLatest \`find * -type d -maxdepth 0\`)`
fi

prefix="${goboInstall}/$programname/$versionnumber"

Is_Directory "$prefix" || Die "$programname version $versionnumber was not found."
error_msg="$programname $versionnumber already attached."
if Boolean "force"
then
   Boolean "batch" && error_msg=""
   Is_Directory "${goboPrograms}/$programname/$versionnumber" && PassAway $error_msg
fi

Log_Normal "Attaching ${programname}, version ${versionnumber} from ${goboInstall}."

#What to do.....

# This is a little more complex than a simple mv.  Not sure if it needs to be
# but as it will normally be across filesystems it isn't that inefficient.

Make_Directory "${goboPrograms}/$programname"
ln -nsf "${goboInstall}/$programname/$versionnumber" "${goboPrograms}/$programname/$versionnumber"
[ "$?" = "0" ] || Log_Error "Can´t create symlink"

symopts=""
Boolean "rootfs" && symopts="--rootfs"
SymlinkProgram $symopts "$programname" "$versionnumber"

if ! Boolean "no-dependencies"
then
   Log_Normal "Checking Dependencies..."
   Dependencies -c -h -e $0 "$programname" "$versionnumber"
fi
