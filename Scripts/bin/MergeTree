#!/bin/bash

### Imports ###########################################################

. ScriptFunctions
Import OptionParser

### Options ###########################################################

helpOnNoArguments=yes
scriptDescription="Mirrors one directory structure into another."
scriptNotes="All files and directories in <source> appear as
    symbolic links in <destination>"
scriptUsage="<source> <destination>"
scriptExample="/Programs/KOffice/Current /Programs/KDE/Current"
Add_Option_Boolean "d" "delete" "On conflicts, overwrite original file."
Parse_Options "$@"

### Operation #########################################################

source=$(Arg 1)
destination=$(Arg 2)

if [ ! "${source}" -o ! "${destination}" ]
then
   Show_Help
   exit 1
fi

if [ ! -d "${source}" ]
then
   Die "Source directory (${source}) does not exist"
fi

if [ ! -d "${destination}" ]
then
   Die "Destination directory (${destination}) does not exist"
fi

Boolean "delete" && flags="$flags --delete"
Boolean "verbose" && flags="$flags --verbose"

cd $source

if [ ! -d "${destination}" ]
then
   Die "${destination} is not reachable from ${source}. You have to use absolute paths for destination directory."
fi

for file in *
do
   if [ "$file" != "*" ]
   then
      if [ ! -e $destination/$file ]
      then
         ln -s $PWD/$file $destination/$file
      else
         if [ -d $destination/$file -a ! -L $destination/$file ]
         then
            $scriptName $flags $OPT_DELETE $source/$file $destination/$file
         else
            if Boolean "delete"
            then
               Log_Normal "File $file exists in $destination... REPLACING."
               rm -- $destination/$file
               ln -s $PWD/$file $destination/$file
            else
               Log_Verbose "File $file exists in $destination... skipping"
            fi
         fi
      fi
   fi
done
