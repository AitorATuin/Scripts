#!/bin/sh

#
# RescueSymlinkProgram
#  A minimal functionality SymlinkProgram that can be used when the original script is not working
#
#  Does not relly on python, sed, awk, grep, find or on any script from Scripts package
#
#  Depends only on bash and CoreUtils tools (dirname, basename, ln, cp, mkdir, ...)
#
# (C) 2004 Andre Detsch. Released under the GNU GPL.
#          detsch at gobolinux.org
#
#

if [ ! "$1" -o "$1" = "--help" ] 
then
	echo "RescueSymlinkProgram" > /dev/stderr
	echo "A minimal functionality SymlinkProgram that can be used when the original script is not working" > /dev/stderr
	echo "Usage:   `basename $0` <program_path> [goboLinks]" > /dev/stderr 
	echo "Example: `basename $0` /Programs/Glibc/Current /System/Links" > /dev/stderr 
	exit 1
fi

echo "RescueSymlinkProgram: Warning, this script should only be used when SymlinkProgram fails." > /dev/stderr

if [ -d "$1" ]
then 
	full_path="$1"
	if [ -d "$2" ]
	then
		gobolinks="$2"
	else
		echo "RescueSymlinkProgram: Assuming /System/Links as goboLinks directory." > /dev/stderr
		gobolinks="/System/Links"
	fi
else
	echo "RescueSymlinkProgram: $1 is not an existing directory." > /dev/stderr
	exit 1
fi

if [ ! -d $gobolinks ] 
then
	echo "RescueSymlinkProgram: ${gobolinks} is not an existing directory." > /dev/stderr
	exit 1
fi

echo "RescueSymlinkProgram: Linking ${full_path} inside ${gobolinks}" > /dev/stderr


if [ -d ${gobolinks}/Executables ]
then
	cd ${gobolinks}/Executables
	echo RescueSymlinkProgram: ${gobolinks}/Executables > /dev/stderr
	[ -d ${full_path}/bin  ] && ln -sfn ${full_path}/bin/* .
	[ -d ${full_path}/sbin ] && ln -sfn ${full_path}/sbin/* .
	[ -d ${full_path}/Wrappers ] && ln -sfn ${full_path}/Wrappers/* .
fi

if [ -d ${gobolinks}/Libraries ]
then
	cd ${gobolinks}/Libraries
	echo RescueSymlinkProgram: ${gobolinks}/Libraries > /dev/stderr
	[ -d ${full_path}/lib  ] && ln -sfn ${full_path}/lib/* .
fi

if [ -d ${gobolinks}/Headers ]
then
	cd ${gobolinks}/Headers
	echo RescueSymlinkProgram: ${gobolinks}/Headers > /dev/stderr
	[ -d ${full_path}/include  ] && ln -sfn ${full_path}/include/* .
fi

if [ -d ${gobolinks}/../Settings ]
then
	cd ${gobolinks}/../Settings
	echo RescueSymlinkProgram: ${gobolinks}/../Settings > /dev/stderr
	[ -d ${full_path}/../Settings  ] && ln -sfn ${full_path}/../Settings/* .
fi


# Do not link Shared nor Manuals

echo "RescueSymlinkProgram: Done" > /dev/stderr

exit 0
