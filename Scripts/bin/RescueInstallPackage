#!/bin/bash
. GoboPath 2> /dev/null

#
# RescueInstallPackage
#  A minimal functionality InstallPackage that can be used when the original script is not working
#  
#  Does not rely on python, sed, awk, grep, find or on any script from Scripts package despite 'RescueSymlinkProgram'
#
#  Depends only on Bash, CoreUtils tools (dirname, basename, ln, cp, mkdir, cut, ...), wget (if url) and tar (if .tar.bz2)
#
# (C) 2004 Andre Detsch. Released under the GNU GPL.
#          detsch at gobolinux.org
#
#

if [ ! "$1" -o "$1" = "--help" ] 
then
	echo "RescueInstallPackage"
	echo "A minimal functionality InstallPackage that can be used when the original script is not working"
	echo "Usage:   `basename $0` <package_file|package_dir|package_url> [goboPrograms] [goboLinks]" 2> /dev/stderr 
	echo "Example: `basename $0` /Depot/Packages/Glibc--2.3.2--i686.tar.bz2 /Programs /System/Links" 2> /dev/stderr 
	exit 1
fi

echo "RescueInstallPackage: Warning, this script should only be used when InstallPackage fails." 2> /dev/stderr

if [ -e "$1" ] 
then
	filename="$1"
else   
	if [ "`echo "$1" | cut -b-5`" = "http:" -o "`echo "$1" | cut -b-4`" = "ftp:" ]
	then # is_URL
		echo "RescueInstallPackage: Downloading '$1' to  /tmp/`basename "$1"`" 2> /dev/stderr
		wget -c -O /tmp/`basename "$1"` "$1"
		filename=/tmp/`basename "$1"`
	fi
fi

if [ "$2" ]
then
	goboprograms="$2"
	if [ "$3" ]
	then
		gobolinks="$3"
	fi
fi 
  
if [ ! "$goboprograms" ]
then
   if [ "${goboPrograms}" ]
   then
      echo "RescueInstallPackage: Assuming ${goboPrograms} as goboPrograms directory." 2> /dev/stderr
      goboprograms=${goboPrograms}
   else
      echo "RescueInstallPackage: Assuming /Programs as goboPrograms directory." 2> /dev/stderr
      goboprograms=/Programs
   fi
fi
 
if [ ! "$gobolinks" ]
then
   if [ "${goboPrograms}" ]
   then
      echo "RescueInstallPackage: Assuming ${goboLinks} as goboLinks directory." 2> /dev/stderr
      gobolinks=${goboLinks}
   else
      echo "RescueInstallPackage: Assuming /System/Links as goboLinks directory." 2> /dev/stderr
      gobolinks=/System/Links
   fi
fi

if [ ! -d $goboprograms ] 
then
	echo "RescueInstallPackage: $goboprograms is not an existing directory." 2> /dev/stderr
	exit 1
fi

if [ ! -d $gobolinks ] 
then
	echo "RescueInstallPackage: ${gobolinks} is not an existing directory." 2> /dev/stderr
	exit 1
fi

if [ -d "$filename" ]
then
	realv=`readlink "$1"` # no '-f' due to compatibility
	if [ ! "$realv" ] 
	then
		realv="$1"
	fi
	packageversion=`basename "$realv"`
	x=`dirname $realv`
	packagename=`basename $x`
	mkdir -p $goboprograms/$packagename 2> /dev/null
	echo "RescueInstallPackage: Copying $filename in $goboprograms/$packagename" 2> /dev/stderr
	cp -R "$filename" $goboprograms/$packagename
else
	base=`basename "$filename"`
	packageversion=`echo "$base" | cut -d'-' -f2`
	packagename=`echo "$base" | cut -d'-' -f1`
	tar xjvf  $filename -C $goboprograms
fi

echo "RescueInstallPackage: Calling RescueSymlinkProgram $goboprograms/$packagename/$packageversion $gobolinks" 2> /dev/stderr
RescueSymlinkProgram $goboprograms/$packagename/$packageversion $gobolinks

echo "RescueInstallPackage: Done" 2> /dev/stderr

