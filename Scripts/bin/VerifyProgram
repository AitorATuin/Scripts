#!/bin/sh

source ScriptFunctions
Import OptionParser
Import GoboLinux
Import File
Import String

######## Error codes ########
# 0     No Error
# 1     FileHash check failed
# 2     No GnuPG or setup error
# 3     Signature check failed
# 4     No signature
# 5     No FileHash (implies no signature)

GPG_opts="--keyring ${GPG_gobo_keyring}"

scriptDescription="Verify the hashes file gpg signature and check the hashes of a Gobolinux package."
scriptCredits="Copyright (C) 2003 Carlo Calica. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="{ [<options>] <package> [<version>] }"
scriptNotes="If no version is specified, Current is assumed.  
The default keyrings are: 
    $HOME/.gnupg/pubring.gpg
    ${GPG_gobo_keyring}"

########## Options ##########
Add_Option_Entry "r" "keyring" "GPG option to an additional the keyring location."
Add_Option_Boolean "S" "no-signature" "Just verify FileHash.  Do not check GPG signature."
Add_Option_Boolean "q" "quiet" "No output.  Check exit status for result."
Parse_Options "$@"
shift $parsedArguments

##### Run as original user
Release_Superuser

### Utility functions ################################################################

### Parse options #######################################################################
package=`GuessProgramCase $1 $2`
if [ "$2" ]
then
   version=`Get_Version "$package" "$2"`
else
   version=`Get_Version "$package" "Current"`
fi

quiet=""
Boolean "verbose" || quiet="Quiet"
Boolean "quiet" && quiet="Quiet"

prefix="$goboPrograms/$package/$version"

Is_Directory "$goboPrograms/$package" || Die "Package $package does not exist."
Is_Empty "$version" && Die "Couldn't find a proper version for $package."
Is_Directory "$prefix" || Die "$package version $version is not a valid package."
cd "$prefix"

FileHash_loc="Resources/FileHash"
FileHash_sig="${FileHash_loc}.sig"

if Exists "$HOME/.gnupg/pubring.gpg"
then
   GPG_opts="${GPG_opts} --keyring $HOME/.gnupg/pubring.gpg"
fi

if Is_Entry_Set "keyring"
then
   keyring=`Entry "keyring"`
   GPG_opts="${GPG_opts} --keyring ${keyring}"
fi

########## Operations ##########

result=0
if Is_Executable "/bin/gpgv"
then
   if Exists "${FileHash_sig}" && ! Boolean "no-signature"
   then
      Boolean "quiet" || Log_Normal "Verifying signature..."
      $quiet Check_FileSig "${FileHash_loc}" "${FileHash_sig}"
      if Failed
      then
         Boolean "quiet" || Log_Error "Signature check failed: $rtn"
         exit 3
      fi
      Boolean "quiet" || Log_Normal "Signature OK"
   elif ! Boolean "no-signature"
   then  
      Boolean "quiet" || Log_Error "No signature to verify."
      result=4
   fi
else
   Log_Error "GnuPG 1.4.x not installed."
   result=2
fi

if Exists "${FileHash_loc}"
then
   Boolean "quiet" || Log_Normal "Verifying FileHash..."
   output=`Check_FileHash "$package" "$version" "Resources/FileHash"`
   if Failed
   then
      Boolean "quiet" || Log_Error "FileHash check failed: $output"
      exit 3
   fi
   Boolean "quiet" || Log_Normal "FileHash OK"
else
   Boolean "quiet" || Log_Error "No FileHash to verify."
   result=5
fi
exit $result
