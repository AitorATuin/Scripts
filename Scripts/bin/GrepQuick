#!/bin/sh

### Options ###################################################################

source ScriptFunctions
Import OptionParser
Import String

scriptDescription="Shorthand for 'grep'."
scriptCredits="Copyright (C) 2001-2002 Hisham Muhammad. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="<pattern> [<files...>]"
Add_Option_Boolean "r" "recursive" "Recursive."
Add_Option_Boolean "s" "source" "Special mode for C/C++/Java sources: skips comments if FilterComments is available."
Add_Option_Boolean "w" "whole-word" "Match whole words only."
Add_Option_Boolean "C" "no-color" "Avoid coloring (for grep's that don't support it)."
Add_Option_Boolean "b" "binaries" "Also search binary files."
scriptNotes="
Search is case sensitive only if there is at least one uppercase character
in the pattern.
Binary files are not searched unless --binaries is given.
Error messages are not displayed.
Line numbers are displayed.
If no files are specified, all files are selected (except in \"source\" mode, where
*.[CcHh]* is selected instead).
"
Parse_Options "$@"
shift $parsedArguments

### Flags #####################################################################

Boolean "whole-word" && export whole="-w"
Boolean "recursive" && export recursive="-r"
color="--color=always"
Boolean "no-color" && export color=

### Special mode for source files #############################################

Boolean "source" && {

function source_grep() {
   function fcat() {
      if which FilterComments 2> /dev/null
      then FilterComments < "$1"
      else cat "$1"
      fi
   }
   fcat "$1" |\
   grep -n $whole --color=always "$2" |\
   awk -v fil="$1" '
      {
         print fil ":" $0
      }
   '
}

pattern="$1"
shift
if [ "$*" ] 
then for f in "$@"; do source_grep "$f" "$pattern"; done
else for f in *.[CcHh]*; do source_grep "$f" "$pattern"; done
fi

exit 0
}

### Normal mode ###############################################################

function all() {
if [ -L share -a $(dirname $(dirname $PWD)) = "$goboPrograms" ]
then ls -d -- * .[A-Za-z0-9]* 2> /dev/null | grep -v share
else ls -d -- * .[A-Za-z0-9]* 2> /dev/null 
fi
}

nobins=-I
Boolean "binaries" && nobins=

pattern="$1"
shift
Has_Uppercase "$pattern" || insensitive=-i
if [ "$*" ]
then grep $insensitive $whole $recursive $color $nobins -snH --mmap -- "$pattern" "$@"
else grep $insensitive $whole $recursive $color $nobins -snH --mmap -- "$pattern" `all`
fi
