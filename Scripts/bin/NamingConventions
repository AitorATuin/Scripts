#!/bin/sh

source ScriptFunctions
Import OptionParser

### Changelog #################################################################

# 26/06/2002 - [hisham] "The", first fix for pre-capitalized titles, mawk to awk
# 24/04/2002 - [hisham] Fixed bug with two occurences of the same pattern
# 06/04/2002 - [hisham] First version

### Help ######################################################################

helpOnNoArguments=yes
scriptDescription="Heuristics to determine a capitalized, GoboLinux-like name."
scriptUsage="<name>"
Parse_Options "$@"
shift $parsedArguments

### Operation loop ############################################################

grep -i "^$1\$" "$goboSettings/Scripts/NamesDatabase" && exit 0

if echo "$1" | grep -E "[[:upper:]]+" &> /dev/null
then
   echo "$1" | cut -b1 | tr "[:lower:]" "[:upper:]" | tr -d "\n"
   echo "$1" | cut -b2-
   exit 0
fi

#awk
echo "$1" | awk '
   function match_prefix(s,pfx) {
      if (substr(s,1,length(pfx))==tolower(pfx)) {
         return pfx capital(substr(s,length(pfx)+1))
      } else return ""
   }
   function match_suffix(s,sfx) {
      if (substr(s,length(s)-length(sfx)+1)==tolower(sfx)) {
         return capital(substr(s,1,length(s)-length(sfx))) sfx
      } else return ""
   }
   function match_prefix_2(s,pfx) {
      if (substr(s,1,length(pfx))==tolower(pfx) && substr(s,length(pfx)+1,1) ~ /[^aeiouyrlnh]/) {
         return pfx capital(substr(s,length(pfx)+1))
      } else return ""   
   }
   function match_suffix_2(s,sfx) {
      if (substr(s,length(s)-length(sfx)+1)==tolower(sfx) && substr(s,length(s)-length(sfx),1) ~ /[^aeiouyrlnh]/) {
         return capital(substr(s,1,length(s)-length(sfx))) sfx
      } else return ""
   }
   function capital(s,   out,curr,state,i,car) {
      out=""
      curr=""
      state=0
      mtc = match_prefix_2(s,"K"); if (mtc != "") return mtc
      mtc = match_prefix_2(s,"G"); if (mtc != "") return mtc
      mtc = match_prefix_2(s,"Qt"); if (mtc != "") return mtc
      mtc = match_prefix_2(s,"XM"); if (mtc != "") return mtc
      mtc = match_prefix_2(s,"X"); if (mtc != "") return mtc
      mtc = match_prefix_2(s,"Mk"); if (mtc != "") return mtc
      mtc = match_prefix(s,"Free"); if (mtc != "") return mtc
      mtc = match_prefix(s,"Open"); if (mtc != "") return mtc
      mtc = match_prefix(s,"Lib"); if (mtc != "") return mtc
      mtc = match_suffix(s,"Edit"); if (mtc != "") return mtc
      mtc = match_suffix(s,"Lib"); if (mtc != "") return mtc
      mtc = match_suffix(s,"Progs"); if (mtc != "") return mtc
      mtc = match_suffix(s,"Tools"); if (mtc != "") return mtc
      mtc = match_suffix(s,"Utils"); if (mtc != "") return mtc
      mtc = match_suffix(s,"Script"); if (mtc != "") return mtc
      mtc = match_suffix_2(s,"FS"); if (mtc != "") return mtc
      for (i=1;i<=length(s);i++) {
         car=substr(s,i,1)
         if (car ~ /[+0123456789 _-]/ ) {
            out=out properlycapitalize(curr)
            out=out car
            curr=""
            state=0
         } else if (state==0) {
            curr=curr toupper(car)
            state=1
         } else if (state==1) {
            curr=curr car
         }
      }
      out=out properlycapitalize(curr)
      return out
   }
   function properlycapitalize(s,   sq,l,i,c) {
      sq=0
      l=length(s)
      if (l < 2) return toupper(s)
         for (i=1;i<=l;i++) {
            c=tolower(substr(s,i,1))
            if (c=="a"||c=="e"||c=="i"||c=="o"||c=="u"||c=="y") {
               if (sq==2) {
                  return s
               } else {
                  if (sq==1)
                     sq=2
               }
            } else {
               if (sq==2) {
                  return s
               } else {
                  sq=1
               }
            }
         }
      return toupper(s)
   }
   {
      WW=$1
      WW=capital(WW)
   }

   {
      printf "%s\n", WW
   }
'
#awk
